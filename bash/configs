shopt -s histappend

export EDITOR="subl3 -w"

export HISTCONTROL=ignoreboth
export HISTSIZE=100000
shopt -s checkwinsize

if [ -s "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"  # This loads Rbenv
  eval "$(rbenv init -)"
fi

if [ -s "/usr/local/opt/chruby/share/chruby/chruby.sh" ]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
  source /usr/local/opt/chruby/share/chruby/auto.sh
fi

# Make C-a/C-e work as home/end
set -o emacs

# PS functions
_ps1_fg() {
  echo -n "\033[38;5;$1m"
}

_ps1_bg() {
  echo -n "\033[48;5;$1m"
}

_ps1_clear() {
  echo -n "\e[0m"
}

_parse_git_stash() {
  git stash list 2> /dev/null | wc -l | awk '{print $1}'
}

_parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/"
}

_parse_git_part() {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    echo -n " at $(_ps1_fg 39)$(_parse_git_branch)";
  fi
}

_add_bg() {
  echo -n "$(_ps1_bg $1)$(_ps1_fg $1)"
}

_parse_ruby_version() {
  rbenv version-name
}

_parse_ruby_part() {
  echo -n "(ruby-$(_parse_ruby_version))"
}

_print_prompt() {
  printf "$(_parse_git_part)$(_ps1_clear)"
}

_print_user() {
  echo -n "$(_ps1_fg 197)\u$(_ps1_clear)"
}

_print_directory() {
  echo -n " in $(_ps1_fg 112)\w$(_ps1_clear)"
}

_separator() {
  echo -n "$(_ps1_fg 255)|$(_ps1_clear)"
}

exitstatus() {
  EXITSTATUS="$?"

  PS1="\n$(_print_user)$(_print_prompt)$(_print_directory)\n$ "

  echo -ne "\033]0;${PWD##*/}\007"
}

PROMPT_COMMAND=exitstatus

export RUBY_GC_HEAP_INIT_SLOTS=600000
export RUBY_GC_HEAP_FREE_SLOTS=600000
export RUBY_GC_HEAP_GROWTH_FACTOR=1.25
export RUBY_GC_HEAP_GROWTH_MAX_SLOTS=300000

export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

export LOLCOMMITS_FORK=1
export LOLCOMMITS_DELAY=10
